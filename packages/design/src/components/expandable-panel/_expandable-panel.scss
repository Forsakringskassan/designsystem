@use "../../core";
@use "../../core/mixins/circle";
@use "../../core/typography/headings";
@use "../../core/size";
@use "../icon/icon";
@use "variables" as *;

$EXPANDABLE_PANEL_LINE_HEIGHT: var(--f-line-height-medium);
$ICON_WIDTH: var(--f-icon-size-medium);
$icon-notification-size: var(--f-icon-size-large);

.expandable-panel {
    margin-bottom: core.densify(size.$margin-200);

    &__icon {
        @include circle.circle($background: transparent, $size: $ICON_WIDTH);

        margin-top: calc((#{$EXPANDABLE_PANEL_LINE_HEIGHT} * 1em - #{$ICON_WIDTH}) / 2); // Unit "em" intended here, align icon to header

        position: absolute;
        right: 1rem;

        .icon {
            transition: transform var(--f-animation-duration-long) ease;
        }
    }

    &.expandable-panel--expanded {
        .expandable-panel__icon {
            svg {
                transform: rotate(180deg);
            }
        }

        .expandable-panel__content {
            height: auto;
        }

        .expandable-panel__heading button {
            border-radius: var(--f-border-radius-medium) var(--f-border-radius-medium) 0 0;
        }
    }

    &.expandable-panel--collapsed {
        .expandable-panel__icon {
            svg {
                transform: rotate(0);
            }
        }
    }

    &__heading {
        /* stylelint-disable-next-line scss/at-extend-no-missing-placeholder -- technical debt */

        margin-bottom: 0 !important;

        button {
            background-color: $expandablepanel-heading-color-background-default;
            border: var(--f-border-width-medium) solid $expandablepanel-heading-color-border;
            border-radius: var(--f-border-radius-medium);
            color: $expandablepanel-heading-color-text-default;
            cursor: pointer;
            display: inline-flex;
            flex-wrap: wrap;
            align-items: baseline;
            margin: 0;
            padding: core.densify(size.$padding-100) size.$padding-100;
            position: relative;
            text-align: left;
            text-wrap: pretty;
            width: 100%;
            font-size: var(--f-font-size-large);
            font-weight: var(--f-font-weight-bold);
            line-height: var(--f-line-height-large);
            &:focus,
            &:hover {
                background-color: $expandablepanel-heading-color-background-hover;
            }
        }
    }

    &__notification {
        margin-left: 0.25em;

        .icon-container {
            background: $expandablepanel-heading-notification-color-background;
            border: var(--f-border-radius-small) solid transparent; // forced-colors
            width: $icon-notification-size;
            height: $icon-notification-size;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;

            @media (forced-colors: active) {
                background: canvas;
            }

            .f-icon-bell {
                color: $expandablepanel-heading-notification-icon-color-fill;

                @media (forced-colors: active) {
                    color: buttonText;
                }
            }
        }
    }

    &__content {
        height: 0;
        overflow: hidden;
        transition: height var(--f-animation-duration-medium) ease-in;
    }

    &__body {
        background-color: $expandablepanel-heading-color-background-default;
        border: var(--f-border-width-medium) solid $expandablepanel-heading-color-border;
        border-top: 0;
        border-radius: 0 0 var(--f-border-radius-medium) var(--f-border-radius-medium);
        line-height: inherit;
        padding: core.densify(size.$padding-150) size.$padding-150;
    }
}
